@model KeyGem.ViewModel.NewOrderViewModel
@{
    ViewBag.Title = "New";
}

<link rel="stylesheet" href="~/Content/toastr.css" />

<div class="content-header">
    <div class="container-fluid">
        <h2>@(Model.order.Id == 0 ? "New Order" : "Edit Order")</h2>
    </div>
</div>
@using (Html.BeginForm("Save", "Order"))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(m => m.order.PersonId)
                @Html.HiddenFor(m => m.order.PersonId, new { id = "personData" })
                <input class="form-control" id="personName" readonly />
                @Html.ValidationMessageFor(m => m.order.PersonId)
            </div>
        </div>

        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(m => m.order.ProductId)
                @Html.HiddenFor(m => m.order.ProductId, new { id = "productData" })
                <input class="form-control" id="productName" readonly />
                @Html.ValidationMessageFor(m => m.order.ProductId)
            </div>
        </div>
        <div class="col-6">
            <section class="content">
                <div class="container-fluid">

                    <table id="person" class="table table-bordered table-hover display">
                        <thead>
                            <tr>
                                <th>
                                    Person
                                </th>
                                <th>
                                    Phone Number
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </section>
        </div>
        <div class="col-6">
            <section class="content">
                <div class="container-fluid">
                    <table id="products" class="table table-bordered table-hover display">
                        <thead>
                            <tr>
                                <th>
                                    Product
                                </th>
                                <th>
                                    Catagory
                                </th>
                                <th>Stock</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </section>
        </div>
        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(m => m.order.Quantity)
                @Html.TextBoxFor(m => m.order.Quantity, new { id = "quantity", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.order.Quantity)
                @Html.ValidationMessage("OutOfStock")
            </div>
        </div>
        <div class="col-6">
            <label for="VariantId">Select Variant</label>
            <select class="form-control" id="variantDropdown" name="VariantId">
                <option value="">Select Variant</option>
            </select>
            @if (TempData["NoVariant"] != null)
                {
                    <span class="field-validation-error">@TempData["NoVariant"]</span>
                }
        </div>
        @if (Model.order.Id != 0)
        {
            <div class="col-6">
                <div class="form-group">
                    <div class="mb-3">
                        @Html.LabelFor(m => m.order.OrderStateId, new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.order.OrderStateId, new SelectList(Model.OrderStates, "Id", "name"), "Select order state", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.order.OrderStateId)
                    </div>
                </div>
            </div>
        }
        @Html.HiddenFor(m => m.order.Id)

    </div>
    <button type="submit" class="btn btn-success" style="margin-bottom: 20px; margin-top: 20px; padding-left: 30px; padding-right: 30px">Save</button>
    <button type="button" class="btn btn-danger" style="margin-bottom: 20px; margin-top: 20px; padding-left: 30px; padding-right: 30px" onclick="location.href='@Url.Action("Index", "Order")'">Cancel</button>
}
@section scripts
{
    <script src="~/AdminLte/plugins/ckeditor/ckeditor.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
<script>
        $(document).ready(function () {
            function populateDropdown(data) {
                var dropdown = $('#variantDropdown');
                dropdown.empty();
                dropdown.append('<option value="">Select Variant</option>');
                $.each(data, function (index, variant) {
                    dropdown.append($('<option></option>').attr('value', variant.id).text(variant.name + ' - stock: ' + variant.stock));
                });
            }
            $('#quantity').val(@Model.order.Quantity == 0 ? "" : @Model.order.Quantity);
                $('#personData').val(@Model.order.PersonId == 0 ? "" : @Model.order.PersonId);
                $('#productData').val(@Model.order.ProductId == 0 ? "" : @Model.order.ProductId);
                    
            $('#personName').val('@Html.Raw(Model.order.Person == null ? "" : Model.order.Person.FirstName + " " + Model.order.Person.LastName)');
            $('#productName').val('@(Model.order.Product == null ? "" : Model.order.Product.Name)');

            $.ajax({
                url: "/api/variant/" + @Model.order.ProductId,
                data: { specialCall: true },
                method: "GET",
                dataType: "json",
                success: function (data) {
                    populateDropdown(data);
                    $('#variantDropdown').val('@Model.order.VariantId');
                }
            });


                var table = $("#person").DataTable({
                    ajax: {
                        url: "/api/person/",
                        dataSrc: ""
                    },
                    columns:
                        [
                            {
                                data: null,
                                render: function (data, type, row) {
                                    var fullName = row.firstName + " " + row.lastName;

                                    return fullName;
                                }
                            },
                            {
                                data: "phone"
                            },
                        ],
                    rowCallback: function (row, data) {
                        $(row).on('click', function () {
                            $('#personData').val(data.id);
                            $('#personName').val(data.firstName + ' ' + data.lastName);
                        });
                    }
                });



                var table = $("#products").DataTable({
                    ajax: {
                        url: "/api/product",
                        data: { specialCall: true },
                        dataSrc: ""
                    },
                    columns:
                        [
                            {
                                data: "name"
                            },
                            {
                                data: "catagory.name"
                            },
                            {
                                data: "totalStock"
                            },

                        ],
                    rowCallback: function (row, data) {
                        $(row).on('click', function () {
                            $('#productData').val(data.id);
                            $('#productName').val(data.name);
                            $.ajax({
                                url: "/api/variant/" + data.id,
                                data: { specialCall: true },
                                method: "GET",
                                dataType: "json",
                                success: function (data) {
                                    populateDropdown(data);
                                    $('#variantDropdown').val('');
                                }
                            });
                        });
                    }
                });
            });
</script>
    @if (TempData["CreateNewOrderSuccess"] != null)
    {
        <script>
            $(document).ready(function () {
                toastr.success("Order successfully created");
            });
        </script>
    }
    <script src="~/AdminLte/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/AdminLte/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/AdminLte/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/AdminLte/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/AdminLte/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/AdminLte/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/AdminLte/plugins/jszip/jszip.min.js"></script>
    <script src="~/AdminLte/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="~/AdminLte/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="~/AdminLte/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/AdminLte/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/AdminLte/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
}
<style>
    .field-validation-error {
        color: red;
    }

    .input-validation-error {
        border: 2px solid red;
    }
</style>
